#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.8                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3162074725094743607) {
   out_3162074725094743607[0] = 0;
   out_3162074725094743607[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3162074725094743607[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3162074725094743607[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3162074725094743607[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3162074725094743607[5] = -sin(in_vec[1]);
   out_3162074725094743607[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3162074725094743607[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3162074725094743607[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3162074725094743607[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3162074725094743607[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3162074725094743607[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3162074725094743607[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3162074725094743607[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3162074725094743607[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3162074725094743607[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3162074725094743607[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3162074725094743607[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5754035859235434590) {
   out_5754035859235434590[0] = delta_x[0] + nom_x[0];
   out_5754035859235434590[1] = delta_x[1] + nom_x[1];
   out_5754035859235434590[2] = delta_x[2] + nom_x[2];
   out_5754035859235434590[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5754035859235434590[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5754035859235434590[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5754035859235434590[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5754035859235434590[7] = delta_x[6] + nom_x[7];
   out_5754035859235434590[8] = delta_x[7] + nom_x[8];
   out_5754035859235434590[9] = delta_x[8] + nom_x[9];
   out_5754035859235434590[10] = delta_x[9] + nom_x[10];
   out_5754035859235434590[11] = delta_x[10] + nom_x[11];
   out_5754035859235434590[12] = delta_x[11] + nom_x[12];
   out_5754035859235434590[13] = delta_x[12] + nom_x[13];
   out_5754035859235434590[14] = delta_x[13] + nom_x[14];
   out_5754035859235434590[15] = delta_x[14] + nom_x[15];
   out_5754035859235434590[16] = delta_x[15] + nom_x[16];
   out_5754035859235434590[17] = delta_x[16] + nom_x[17];
   out_5754035859235434590[18] = delta_x[17] + nom_x[18];
   out_5754035859235434590[19] = delta_x[18] + nom_x[19];
   out_5754035859235434590[20] = delta_x[19] + nom_x[20];
   out_5754035859235434590[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5787811691745881220) {
   out_5787811691745881220[0] = -nom_x[0] + true_x[0];
   out_5787811691745881220[1] = -nom_x[1] + true_x[1];
   out_5787811691745881220[2] = -nom_x[2] + true_x[2];
   out_5787811691745881220[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5787811691745881220[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5787811691745881220[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5787811691745881220[6] = -nom_x[7] + true_x[7];
   out_5787811691745881220[7] = -nom_x[8] + true_x[8];
   out_5787811691745881220[8] = -nom_x[9] + true_x[9];
   out_5787811691745881220[9] = -nom_x[10] + true_x[10];
   out_5787811691745881220[10] = -nom_x[11] + true_x[11];
   out_5787811691745881220[11] = -nom_x[12] + true_x[12];
   out_5787811691745881220[12] = -nom_x[13] + true_x[13];
   out_5787811691745881220[13] = -nom_x[14] + true_x[14];
   out_5787811691745881220[14] = -nom_x[15] + true_x[15];
   out_5787811691745881220[15] = -nom_x[16] + true_x[16];
   out_5787811691745881220[16] = -nom_x[17] + true_x[17];
   out_5787811691745881220[17] = -nom_x[18] + true_x[18];
   out_5787811691745881220[18] = -nom_x[19] + true_x[19];
   out_5787811691745881220[19] = -nom_x[20] + true_x[20];
   out_5787811691745881220[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7077244422403030034) {
   out_7077244422403030034[0] = 1.0;
   out_7077244422403030034[1] = 0.0;
   out_7077244422403030034[2] = 0.0;
   out_7077244422403030034[3] = 0.0;
   out_7077244422403030034[4] = 0.0;
   out_7077244422403030034[5] = 0.0;
   out_7077244422403030034[6] = 0.0;
   out_7077244422403030034[7] = 0.0;
   out_7077244422403030034[8] = 0.0;
   out_7077244422403030034[9] = 0.0;
   out_7077244422403030034[10] = 0.0;
   out_7077244422403030034[11] = 0.0;
   out_7077244422403030034[12] = 0.0;
   out_7077244422403030034[13] = 0.0;
   out_7077244422403030034[14] = 0.0;
   out_7077244422403030034[15] = 0.0;
   out_7077244422403030034[16] = 0.0;
   out_7077244422403030034[17] = 0.0;
   out_7077244422403030034[18] = 0.0;
   out_7077244422403030034[19] = 0.0;
   out_7077244422403030034[20] = 0.0;
   out_7077244422403030034[21] = 0.0;
   out_7077244422403030034[22] = 1.0;
   out_7077244422403030034[23] = 0.0;
   out_7077244422403030034[24] = 0.0;
   out_7077244422403030034[25] = 0.0;
   out_7077244422403030034[26] = 0.0;
   out_7077244422403030034[27] = 0.0;
   out_7077244422403030034[28] = 0.0;
   out_7077244422403030034[29] = 0.0;
   out_7077244422403030034[30] = 0.0;
   out_7077244422403030034[31] = 0.0;
   out_7077244422403030034[32] = 0.0;
   out_7077244422403030034[33] = 0.0;
   out_7077244422403030034[34] = 0.0;
   out_7077244422403030034[35] = 0.0;
   out_7077244422403030034[36] = 0.0;
   out_7077244422403030034[37] = 0.0;
   out_7077244422403030034[38] = 0.0;
   out_7077244422403030034[39] = 0.0;
   out_7077244422403030034[40] = 0.0;
   out_7077244422403030034[41] = 0.0;
   out_7077244422403030034[42] = 0.0;
   out_7077244422403030034[43] = 0.0;
   out_7077244422403030034[44] = 1.0;
   out_7077244422403030034[45] = 0.0;
   out_7077244422403030034[46] = 0.0;
   out_7077244422403030034[47] = 0.0;
   out_7077244422403030034[48] = 0.0;
   out_7077244422403030034[49] = 0.0;
   out_7077244422403030034[50] = 0.0;
   out_7077244422403030034[51] = 0.0;
   out_7077244422403030034[52] = 0.0;
   out_7077244422403030034[53] = 0.0;
   out_7077244422403030034[54] = 0.0;
   out_7077244422403030034[55] = 0.0;
   out_7077244422403030034[56] = 0.0;
   out_7077244422403030034[57] = 0.0;
   out_7077244422403030034[58] = 0.0;
   out_7077244422403030034[59] = 0.0;
   out_7077244422403030034[60] = 0.0;
   out_7077244422403030034[61] = 0.0;
   out_7077244422403030034[62] = 0.0;
   out_7077244422403030034[63] = 0.0;
   out_7077244422403030034[64] = 0.0;
   out_7077244422403030034[65] = 0.0;
   out_7077244422403030034[66] = -0.5*state[4];
   out_7077244422403030034[67] = -0.5*state[5];
   out_7077244422403030034[68] = -0.5*state[6];
   out_7077244422403030034[69] = 0.0;
   out_7077244422403030034[70] = 0.0;
   out_7077244422403030034[71] = 0.0;
   out_7077244422403030034[72] = 0.0;
   out_7077244422403030034[73] = 0.0;
   out_7077244422403030034[74] = 0.0;
   out_7077244422403030034[75] = 0.0;
   out_7077244422403030034[76] = 0.0;
   out_7077244422403030034[77] = 0.0;
   out_7077244422403030034[78] = 0.0;
   out_7077244422403030034[79] = 0.0;
   out_7077244422403030034[80] = 0.0;
   out_7077244422403030034[81] = 0.0;
   out_7077244422403030034[82] = 0.0;
   out_7077244422403030034[83] = 0.0;
   out_7077244422403030034[84] = 0.0;
   out_7077244422403030034[85] = 0.0;
   out_7077244422403030034[86] = 0.0;
   out_7077244422403030034[87] = 0.5*state[3];
   out_7077244422403030034[88] = 0.5*state[6];
   out_7077244422403030034[89] = -0.5*state[5];
   out_7077244422403030034[90] = 0.0;
   out_7077244422403030034[91] = 0.0;
   out_7077244422403030034[92] = 0.0;
   out_7077244422403030034[93] = 0.0;
   out_7077244422403030034[94] = 0.0;
   out_7077244422403030034[95] = 0.0;
   out_7077244422403030034[96] = 0.0;
   out_7077244422403030034[97] = 0.0;
   out_7077244422403030034[98] = 0.0;
   out_7077244422403030034[99] = 0.0;
   out_7077244422403030034[100] = 0.0;
   out_7077244422403030034[101] = 0.0;
   out_7077244422403030034[102] = 0.0;
   out_7077244422403030034[103] = 0.0;
   out_7077244422403030034[104] = 0.0;
   out_7077244422403030034[105] = 0.0;
   out_7077244422403030034[106] = 0.0;
   out_7077244422403030034[107] = 0.0;
   out_7077244422403030034[108] = -0.5*state[6];
   out_7077244422403030034[109] = 0.5*state[3];
   out_7077244422403030034[110] = 0.5*state[4];
   out_7077244422403030034[111] = 0.0;
   out_7077244422403030034[112] = 0.0;
   out_7077244422403030034[113] = 0.0;
   out_7077244422403030034[114] = 0.0;
   out_7077244422403030034[115] = 0.0;
   out_7077244422403030034[116] = 0.0;
   out_7077244422403030034[117] = 0.0;
   out_7077244422403030034[118] = 0.0;
   out_7077244422403030034[119] = 0.0;
   out_7077244422403030034[120] = 0.0;
   out_7077244422403030034[121] = 0.0;
   out_7077244422403030034[122] = 0.0;
   out_7077244422403030034[123] = 0.0;
   out_7077244422403030034[124] = 0.0;
   out_7077244422403030034[125] = 0.0;
   out_7077244422403030034[126] = 0.0;
   out_7077244422403030034[127] = 0.0;
   out_7077244422403030034[128] = 0.0;
   out_7077244422403030034[129] = 0.5*state[5];
   out_7077244422403030034[130] = -0.5*state[4];
   out_7077244422403030034[131] = 0.5*state[3];
   out_7077244422403030034[132] = 0.0;
   out_7077244422403030034[133] = 0.0;
   out_7077244422403030034[134] = 0.0;
   out_7077244422403030034[135] = 0.0;
   out_7077244422403030034[136] = 0.0;
   out_7077244422403030034[137] = 0.0;
   out_7077244422403030034[138] = 0.0;
   out_7077244422403030034[139] = 0.0;
   out_7077244422403030034[140] = 0.0;
   out_7077244422403030034[141] = 0.0;
   out_7077244422403030034[142] = 0.0;
   out_7077244422403030034[143] = 0.0;
   out_7077244422403030034[144] = 0.0;
   out_7077244422403030034[145] = 0.0;
   out_7077244422403030034[146] = 0.0;
   out_7077244422403030034[147] = 0.0;
   out_7077244422403030034[148] = 0.0;
   out_7077244422403030034[149] = 0.0;
   out_7077244422403030034[150] = 0.0;
   out_7077244422403030034[151] = 0.0;
   out_7077244422403030034[152] = 0.0;
   out_7077244422403030034[153] = 1.0;
   out_7077244422403030034[154] = 0.0;
   out_7077244422403030034[155] = 0.0;
   out_7077244422403030034[156] = 0.0;
   out_7077244422403030034[157] = 0.0;
   out_7077244422403030034[158] = 0.0;
   out_7077244422403030034[159] = 0.0;
   out_7077244422403030034[160] = 0.0;
   out_7077244422403030034[161] = 0.0;
   out_7077244422403030034[162] = 0.0;
   out_7077244422403030034[163] = 0.0;
   out_7077244422403030034[164] = 0.0;
   out_7077244422403030034[165] = 0.0;
   out_7077244422403030034[166] = 0.0;
   out_7077244422403030034[167] = 0.0;
   out_7077244422403030034[168] = 0.0;
   out_7077244422403030034[169] = 0.0;
   out_7077244422403030034[170] = 0.0;
   out_7077244422403030034[171] = 0.0;
   out_7077244422403030034[172] = 0.0;
   out_7077244422403030034[173] = 0.0;
   out_7077244422403030034[174] = 0.0;
   out_7077244422403030034[175] = 1.0;
   out_7077244422403030034[176] = 0.0;
   out_7077244422403030034[177] = 0.0;
   out_7077244422403030034[178] = 0.0;
   out_7077244422403030034[179] = 0.0;
   out_7077244422403030034[180] = 0.0;
   out_7077244422403030034[181] = 0.0;
   out_7077244422403030034[182] = 0.0;
   out_7077244422403030034[183] = 0.0;
   out_7077244422403030034[184] = 0.0;
   out_7077244422403030034[185] = 0.0;
   out_7077244422403030034[186] = 0.0;
   out_7077244422403030034[187] = 0.0;
   out_7077244422403030034[188] = 0.0;
   out_7077244422403030034[189] = 0.0;
   out_7077244422403030034[190] = 0.0;
   out_7077244422403030034[191] = 0.0;
   out_7077244422403030034[192] = 0.0;
   out_7077244422403030034[193] = 0.0;
   out_7077244422403030034[194] = 0.0;
   out_7077244422403030034[195] = 0.0;
   out_7077244422403030034[196] = 0.0;
   out_7077244422403030034[197] = 1.0;
   out_7077244422403030034[198] = 0.0;
   out_7077244422403030034[199] = 0.0;
   out_7077244422403030034[200] = 0.0;
   out_7077244422403030034[201] = 0.0;
   out_7077244422403030034[202] = 0.0;
   out_7077244422403030034[203] = 0.0;
   out_7077244422403030034[204] = 0.0;
   out_7077244422403030034[205] = 0.0;
   out_7077244422403030034[206] = 0.0;
   out_7077244422403030034[207] = 0.0;
   out_7077244422403030034[208] = 0.0;
   out_7077244422403030034[209] = 0.0;
   out_7077244422403030034[210] = 0.0;
   out_7077244422403030034[211] = 0.0;
   out_7077244422403030034[212] = 0.0;
   out_7077244422403030034[213] = 0.0;
   out_7077244422403030034[214] = 0.0;
   out_7077244422403030034[215] = 0.0;
   out_7077244422403030034[216] = 0.0;
   out_7077244422403030034[217] = 0.0;
   out_7077244422403030034[218] = 0.0;
   out_7077244422403030034[219] = 1.0;
   out_7077244422403030034[220] = 0.0;
   out_7077244422403030034[221] = 0.0;
   out_7077244422403030034[222] = 0.0;
   out_7077244422403030034[223] = 0.0;
   out_7077244422403030034[224] = 0.0;
   out_7077244422403030034[225] = 0.0;
   out_7077244422403030034[226] = 0.0;
   out_7077244422403030034[227] = 0.0;
   out_7077244422403030034[228] = 0.0;
   out_7077244422403030034[229] = 0.0;
   out_7077244422403030034[230] = 0.0;
   out_7077244422403030034[231] = 0.0;
   out_7077244422403030034[232] = 0.0;
   out_7077244422403030034[233] = 0.0;
   out_7077244422403030034[234] = 0.0;
   out_7077244422403030034[235] = 0.0;
   out_7077244422403030034[236] = 0.0;
   out_7077244422403030034[237] = 0.0;
   out_7077244422403030034[238] = 0.0;
   out_7077244422403030034[239] = 0.0;
   out_7077244422403030034[240] = 0.0;
   out_7077244422403030034[241] = 1.0;
   out_7077244422403030034[242] = 0.0;
   out_7077244422403030034[243] = 0.0;
   out_7077244422403030034[244] = 0.0;
   out_7077244422403030034[245] = 0.0;
   out_7077244422403030034[246] = 0.0;
   out_7077244422403030034[247] = 0.0;
   out_7077244422403030034[248] = 0.0;
   out_7077244422403030034[249] = 0.0;
   out_7077244422403030034[250] = 0.0;
   out_7077244422403030034[251] = 0.0;
   out_7077244422403030034[252] = 0.0;
   out_7077244422403030034[253] = 0.0;
   out_7077244422403030034[254] = 0.0;
   out_7077244422403030034[255] = 0.0;
   out_7077244422403030034[256] = 0.0;
   out_7077244422403030034[257] = 0.0;
   out_7077244422403030034[258] = 0.0;
   out_7077244422403030034[259] = 0.0;
   out_7077244422403030034[260] = 0.0;
   out_7077244422403030034[261] = 0.0;
   out_7077244422403030034[262] = 0.0;
   out_7077244422403030034[263] = 1.0;
   out_7077244422403030034[264] = 0.0;
   out_7077244422403030034[265] = 0.0;
   out_7077244422403030034[266] = 0.0;
   out_7077244422403030034[267] = 0.0;
   out_7077244422403030034[268] = 0.0;
   out_7077244422403030034[269] = 0.0;
   out_7077244422403030034[270] = 0.0;
   out_7077244422403030034[271] = 0.0;
   out_7077244422403030034[272] = 0.0;
   out_7077244422403030034[273] = 0.0;
   out_7077244422403030034[274] = 0.0;
   out_7077244422403030034[275] = 0.0;
   out_7077244422403030034[276] = 0.0;
   out_7077244422403030034[277] = 0.0;
   out_7077244422403030034[278] = 0.0;
   out_7077244422403030034[279] = 0.0;
   out_7077244422403030034[280] = 0.0;
   out_7077244422403030034[281] = 0.0;
   out_7077244422403030034[282] = 0.0;
   out_7077244422403030034[283] = 0.0;
   out_7077244422403030034[284] = 0.0;
   out_7077244422403030034[285] = 1.0;
   out_7077244422403030034[286] = 0.0;
   out_7077244422403030034[287] = 0.0;
   out_7077244422403030034[288] = 0.0;
   out_7077244422403030034[289] = 0.0;
   out_7077244422403030034[290] = 0.0;
   out_7077244422403030034[291] = 0.0;
   out_7077244422403030034[292] = 0.0;
   out_7077244422403030034[293] = 0.0;
   out_7077244422403030034[294] = 0.0;
   out_7077244422403030034[295] = 0.0;
   out_7077244422403030034[296] = 0.0;
   out_7077244422403030034[297] = 0.0;
   out_7077244422403030034[298] = 0.0;
   out_7077244422403030034[299] = 0.0;
   out_7077244422403030034[300] = 0.0;
   out_7077244422403030034[301] = 0.0;
   out_7077244422403030034[302] = 0.0;
   out_7077244422403030034[303] = 0.0;
   out_7077244422403030034[304] = 0.0;
   out_7077244422403030034[305] = 0.0;
   out_7077244422403030034[306] = 0.0;
   out_7077244422403030034[307] = 1.0;
   out_7077244422403030034[308] = 0.0;
   out_7077244422403030034[309] = 0.0;
   out_7077244422403030034[310] = 0.0;
   out_7077244422403030034[311] = 0.0;
   out_7077244422403030034[312] = 0.0;
   out_7077244422403030034[313] = 0.0;
   out_7077244422403030034[314] = 0.0;
   out_7077244422403030034[315] = 0.0;
   out_7077244422403030034[316] = 0.0;
   out_7077244422403030034[317] = 0.0;
   out_7077244422403030034[318] = 0.0;
   out_7077244422403030034[319] = 0.0;
   out_7077244422403030034[320] = 0.0;
   out_7077244422403030034[321] = 0.0;
   out_7077244422403030034[322] = 0.0;
   out_7077244422403030034[323] = 0.0;
   out_7077244422403030034[324] = 0.0;
   out_7077244422403030034[325] = 0.0;
   out_7077244422403030034[326] = 0.0;
   out_7077244422403030034[327] = 0.0;
   out_7077244422403030034[328] = 0.0;
   out_7077244422403030034[329] = 1.0;
   out_7077244422403030034[330] = 0.0;
   out_7077244422403030034[331] = 0.0;
   out_7077244422403030034[332] = 0.0;
   out_7077244422403030034[333] = 0.0;
   out_7077244422403030034[334] = 0.0;
   out_7077244422403030034[335] = 0.0;
   out_7077244422403030034[336] = 0.0;
   out_7077244422403030034[337] = 0.0;
   out_7077244422403030034[338] = 0.0;
   out_7077244422403030034[339] = 0.0;
   out_7077244422403030034[340] = 0.0;
   out_7077244422403030034[341] = 0.0;
   out_7077244422403030034[342] = 0.0;
   out_7077244422403030034[343] = 0.0;
   out_7077244422403030034[344] = 0.0;
   out_7077244422403030034[345] = 0.0;
   out_7077244422403030034[346] = 0.0;
   out_7077244422403030034[347] = 0.0;
   out_7077244422403030034[348] = 0.0;
   out_7077244422403030034[349] = 0.0;
   out_7077244422403030034[350] = 0.0;
   out_7077244422403030034[351] = 1.0;
   out_7077244422403030034[352] = 0.0;
   out_7077244422403030034[353] = 0.0;
   out_7077244422403030034[354] = 0.0;
   out_7077244422403030034[355] = 0.0;
   out_7077244422403030034[356] = 0.0;
   out_7077244422403030034[357] = 0.0;
   out_7077244422403030034[358] = 0.0;
   out_7077244422403030034[359] = 0.0;
   out_7077244422403030034[360] = 0.0;
   out_7077244422403030034[361] = 0.0;
   out_7077244422403030034[362] = 0.0;
   out_7077244422403030034[363] = 0.0;
   out_7077244422403030034[364] = 0.0;
   out_7077244422403030034[365] = 0.0;
   out_7077244422403030034[366] = 0.0;
   out_7077244422403030034[367] = 0.0;
   out_7077244422403030034[368] = 0.0;
   out_7077244422403030034[369] = 0.0;
   out_7077244422403030034[370] = 0.0;
   out_7077244422403030034[371] = 0.0;
   out_7077244422403030034[372] = 0.0;
   out_7077244422403030034[373] = 1.0;
   out_7077244422403030034[374] = 0.0;
   out_7077244422403030034[375] = 0.0;
   out_7077244422403030034[376] = 0.0;
   out_7077244422403030034[377] = 0.0;
   out_7077244422403030034[378] = 0.0;
   out_7077244422403030034[379] = 0.0;
   out_7077244422403030034[380] = 0.0;
   out_7077244422403030034[381] = 0.0;
   out_7077244422403030034[382] = 0.0;
   out_7077244422403030034[383] = 0.0;
   out_7077244422403030034[384] = 0.0;
   out_7077244422403030034[385] = 0.0;
   out_7077244422403030034[386] = 0.0;
   out_7077244422403030034[387] = 0.0;
   out_7077244422403030034[388] = 0.0;
   out_7077244422403030034[389] = 0.0;
   out_7077244422403030034[390] = 0.0;
   out_7077244422403030034[391] = 0.0;
   out_7077244422403030034[392] = 0.0;
   out_7077244422403030034[393] = 0.0;
   out_7077244422403030034[394] = 0.0;
   out_7077244422403030034[395] = 1.0;
   out_7077244422403030034[396] = 0.0;
   out_7077244422403030034[397] = 0.0;
   out_7077244422403030034[398] = 0.0;
   out_7077244422403030034[399] = 0.0;
   out_7077244422403030034[400] = 0.0;
   out_7077244422403030034[401] = 0.0;
   out_7077244422403030034[402] = 0.0;
   out_7077244422403030034[403] = 0.0;
   out_7077244422403030034[404] = 0.0;
   out_7077244422403030034[405] = 0.0;
   out_7077244422403030034[406] = 0.0;
   out_7077244422403030034[407] = 0.0;
   out_7077244422403030034[408] = 0.0;
   out_7077244422403030034[409] = 0.0;
   out_7077244422403030034[410] = 0.0;
   out_7077244422403030034[411] = 0.0;
   out_7077244422403030034[412] = 0.0;
   out_7077244422403030034[413] = 0.0;
   out_7077244422403030034[414] = 0.0;
   out_7077244422403030034[415] = 0.0;
   out_7077244422403030034[416] = 0.0;
   out_7077244422403030034[417] = 1.0;
   out_7077244422403030034[418] = 0.0;
   out_7077244422403030034[419] = 0.0;
   out_7077244422403030034[420] = 0.0;
   out_7077244422403030034[421] = 0.0;
   out_7077244422403030034[422] = 0.0;
   out_7077244422403030034[423] = 0.0;
   out_7077244422403030034[424] = 0.0;
   out_7077244422403030034[425] = 0.0;
   out_7077244422403030034[426] = 0.0;
   out_7077244422403030034[427] = 0.0;
   out_7077244422403030034[428] = 0.0;
   out_7077244422403030034[429] = 0.0;
   out_7077244422403030034[430] = 0.0;
   out_7077244422403030034[431] = 0.0;
   out_7077244422403030034[432] = 0.0;
   out_7077244422403030034[433] = 0.0;
   out_7077244422403030034[434] = 0.0;
   out_7077244422403030034[435] = 0.0;
   out_7077244422403030034[436] = 0.0;
   out_7077244422403030034[437] = 0.0;
   out_7077244422403030034[438] = 0.0;
   out_7077244422403030034[439] = 1.0;
   out_7077244422403030034[440] = 0.0;
   out_7077244422403030034[441] = 0.0;
   out_7077244422403030034[442] = 0.0;
   out_7077244422403030034[443] = 0.0;
   out_7077244422403030034[444] = 0.0;
   out_7077244422403030034[445] = 0.0;
   out_7077244422403030034[446] = 0.0;
   out_7077244422403030034[447] = 0.0;
   out_7077244422403030034[448] = 0.0;
   out_7077244422403030034[449] = 0.0;
   out_7077244422403030034[450] = 0.0;
   out_7077244422403030034[451] = 0.0;
   out_7077244422403030034[452] = 0.0;
   out_7077244422403030034[453] = 0.0;
   out_7077244422403030034[454] = 0.0;
   out_7077244422403030034[455] = 0.0;
   out_7077244422403030034[456] = 0.0;
   out_7077244422403030034[457] = 0.0;
   out_7077244422403030034[458] = 0.0;
   out_7077244422403030034[459] = 0.0;
   out_7077244422403030034[460] = 0.0;
   out_7077244422403030034[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8051536556320895415) {
   out_8051536556320895415[0] = dt*state[7] + state[0];
   out_8051536556320895415[1] = dt*state[8] + state[1];
   out_8051536556320895415[2] = dt*state[9] + state[2];
   out_8051536556320895415[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8051536556320895415[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8051536556320895415[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8051536556320895415[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8051536556320895415[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8051536556320895415[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8051536556320895415[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8051536556320895415[10] = state[10];
   out_8051536556320895415[11] = state[11];
   out_8051536556320895415[12] = state[12];
   out_8051536556320895415[13] = state[13];
   out_8051536556320895415[14] = state[14];
   out_8051536556320895415[15] = state[15];
   out_8051536556320895415[16] = state[16];
   out_8051536556320895415[17] = state[17];
   out_8051536556320895415[18] = state[18];
   out_8051536556320895415[19] = state[19];
   out_8051536556320895415[20] = state[20];
   out_8051536556320895415[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3417269740718499968) {
   out_3417269740718499968[0] = 1;
   out_3417269740718499968[1] = 0;
   out_3417269740718499968[2] = 0;
   out_3417269740718499968[3] = 0;
   out_3417269740718499968[4] = 0;
   out_3417269740718499968[5] = 0;
   out_3417269740718499968[6] = dt;
   out_3417269740718499968[7] = 0;
   out_3417269740718499968[8] = 0;
   out_3417269740718499968[9] = 0;
   out_3417269740718499968[10] = 0;
   out_3417269740718499968[11] = 0;
   out_3417269740718499968[12] = 0;
   out_3417269740718499968[13] = 0;
   out_3417269740718499968[14] = 0;
   out_3417269740718499968[15] = 0;
   out_3417269740718499968[16] = 0;
   out_3417269740718499968[17] = 0;
   out_3417269740718499968[18] = 0;
   out_3417269740718499968[19] = 0;
   out_3417269740718499968[20] = 0;
   out_3417269740718499968[21] = 0;
   out_3417269740718499968[22] = 1;
   out_3417269740718499968[23] = 0;
   out_3417269740718499968[24] = 0;
   out_3417269740718499968[25] = 0;
   out_3417269740718499968[26] = 0;
   out_3417269740718499968[27] = 0;
   out_3417269740718499968[28] = dt;
   out_3417269740718499968[29] = 0;
   out_3417269740718499968[30] = 0;
   out_3417269740718499968[31] = 0;
   out_3417269740718499968[32] = 0;
   out_3417269740718499968[33] = 0;
   out_3417269740718499968[34] = 0;
   out_3417269740718499968[35] = 0;
   out_3417269740718499968[36] = 0;
   out_3417269740718499968[37] = 0;
   out_3417269740718499968[38] = 0;
   out_3417269740718499968[39] = 0;
   out_3417269740718499968[40] = 0;
   out_3417269740718499968[41] = 0;
   out_3417269740718499968[42] = 0;
   out_3417269740718499968[43] = 0;
   out_3417269740718499968[44] = 1;
   out_3417269740718499968[45] = 0;
   out_3417269740718499968[46] = 0;
   out_3417269740718499968[47] = 0;
   out_3417269740718499968[48] = 0;
   out_3417269740718499968[49] = 0;
   out_3417269740718499968[50] = dt;
   out_3417269740718499968[51] = 0;
   out_3417269740718499968[52] = 0;
   out_3417269740718499968[53] = 0;
   out_3417269740718499968[54] = 0;
   out_3417269740718499968[55] = 0;
   out_3417269740718499968[56] = 0;
   out_3417269740718499968[57] = 0;
   out_3417269740718499968[58] = 0;
   out_3417269740718499968[59] = 0;
   out_3417269740718499968[60] = 0;
   out_3417269740718499968[61] = 0;
   out_3417269740718499968[62] = 0;
   out_3417269740718499968[63] = 0;
   out_3417269740718499968[64] = 0;
   out_3417269740718499968[65] = 0;
   out_3417269740718499968[66] = 1;
   out_3417269740718499968[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3417269740718499968[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3417269740718499968[69] = 0;
   out_3417269740718499968[70] = 0;
   out_3417269740718499968[71] = 0;
   out_3417269740718499968[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3417269740718499968[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3417269740718499968[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3417269740718499968[75] = 0;
   out_3417269740718499968[76] = 0;
   out_3417269740718499968[77] = 0;
   out_3417269740718499968[78] = 0;
   out_3417269740718499968[79] = 0;
   out_3417269740718499968[80] = 0;
   out_3417269740718499968[81] = 0;
   out_3417269740718499968[82] = 0;
   out_3417269740718499968[83] = 0;
   out_3417269740718499968[84] = 0;
   out_3417269740718499968[85] = 0;
   out_3417269740718499968[86] = 0;
   out_3417269740718499968[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3417269740718499968[88] = 1;
   out_3417269740718499968[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3417269740718499968[90] = 0;
   out_3417269740718499968[91] = 0;
   out_3417269740718499968[92] = 0;
   out_3417269740718499968[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3417269740718499968[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3417269740718499968[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3417269740718499968[96] = 0;
   out_3417269740718499968[97] = 0;
   out_3417269740718499968[98] = 0;
   out_3417269740718499968[99] = 0;
   out_3417269740718499968[100] = 0;
   out_3417269740718499968[101] = 0;
   out_3417269740718499968[102] = 0;
   out_3417269740718499968[103] = 0;
   out_3417269740718499968[104] = 0;
   out_3417269740718499968[105] = 0;
   out_3417269740718499968[106] = 0;
   out_3417269740718499968[107] = 0;
   out_3417269740718499968[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3417269740718499968[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3417269740718499968[110] = 1;
   out_3417269740718499968[111] = 0;
   out_3417269740718499968[112] = 0;
   out_3417269740718499968[113] = 0;
   out_3417269740718499968[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3417269740718499968[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3417269740718499968[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3417269740718499968[117] = 0;
   out_3417269740718499968[118] = 0;
   out_3417269740718499968[119] = 0;
   out_3417269740718499968[120] = 0;
   out_3417269740718499968[121] = 0;
   out_3417269740718499968[122] = 0;
   out_3417269740718499968[123] = 0;
   out_3417269740718499968[124] = 0;
   out_3417269740718499968[125] = 0;
   out_3417269740718499968[126] = 0;
   out_3417269740718499968[127] = 0;
   out_3417269740718499968[128] = 0;
   out_3417269740718499968[129] = 0;
   out_3417269740718499968[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3417269740718499968[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3417269740718499968[132] = 1;
   out_3417269740718499968[133] = 0;
   out_3417269740718499968[134] = 0;
   out_3417269740718499968[135] = 0;
   out_3417269740718499968[136] = 0;
   out_3417269740718499968[137] = 0;
   out_3417269740718499968[138] = 0;
   out_3417269740718499968[139] = 0;
   out_3417269740718499968[140] = 0;
   out_3417269740718499968[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3417269740718499968[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3417269740718499968[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3417269740718499968[144] = 0;
   out_3417269740718499968[145] = 0;
   out_3417269740718499968[146] = 0;
   out_3417269740718499968[147] = 0;
   out_3417269740718499968[148] = 0;
   out_3417269740718499968[149] = 0;
   out_3417269740718499968[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3417269740718499968[151] = 0;
   out_3417269740718499968[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3417269740718499968[153] = 0;
   out_3417269740718499968[154] = 1;
   out_3417269740718499968[155] = 0;
   out_3417269740718499968[156] = 0;
   out_3417269740718499968[157] = 0;
   out_3417269740718499968[158] = 0;
   out_3417269740718499968[159] = 0;
   out_3417269740718499968[160] = 0;
   out_3417269740718499968[161] = 0;
   out_3417269740718499968[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3417269740718499968[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3417269740718499968[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3417269740718499968[165] = 0;
   out_3417269740718499968[166] = 0;
   out_3417269740718499968[167] = 0;
   out_3417269740718499968[168] = 0;
   out_3417269740718499968[169] = 0;
   out_3417269740718499968[170] = 0;
   out_3417269740718499968[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3417269740718499968[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3417269740718499968[173] = 0;
   out_3417269740718499968[174] = 0;
   out_3417269740718499968[175] = 0;
   out_3417269740718499968[176] = 1;
   out_3417269740718499968[177] = 0;
   out_3417269740718499968[178] = 0;
   out_3417269740718499968[179] = 0;
   out_3417269740718499968[180] = 0;
   out_3417269740718499968[181] = 0;
   out_3417269740718499968[182] = 0;
   out_3417269740718499968[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3417269740718499968[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3417269740718499968[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3417269740718499968[186] = 0;
   out_3417269740718499968[187] = 0;
   out_3417269740718499968[188] = 0;
   out_3417269740718499968[189] = 0;
   out_3417269740718499968[190] = 0;
   out_3417269740718499968[191] = 0;
   out_3417269740718499968[192] = 0;
   out_3417269740718499968[193] = 0;
   out_3417269740718499968[194] = 0;
   out_3417269740718499968[195] = 0;
   out_3417269740718499968[196] = 0;
   out_3417269740718499968[197] = 0;
   out_3417269740718499968[198] = 1;
   out_3417269740718499968[199] = 0;
   out_3417269740718499968[200] = 0;
   out_3417269740718499968[201] = 0;
   out_3417269740718499968[202] = 0;
   out_3417269740718499968[203] = 0;
   out_3417269740718499968[204] = 0;
   out_3417269740718499968[205] = 0;
   out_3417269740718499968[206] = 0;
   out_3417269740718499968[207] = 0;
   out_3417269740718499968[208] = 0;
   out_3417269740718499968[209] = 0;
   out_3417269740718499968[210] = 0;
   out_3417269740718499968[211] = 0;
   out_3417269740718499968[212] = 0;
   out_3417269740718499968[213] = 0;
   out_3417269740718499968[214] = 0;
   out_3417269740718499968[215] = 0;
   out_3417269740718499968[216] = 0;
   out_3417269740718499968[217] = 0;
   out_3417269740718499968[218] = 0;
   out_3417269740718499968[219] = 0;
   out_3417269740718499968[220] = 1;
   out_3417269740718499968[221] = 0;
   out_3417269740718499968[222] = 0;
   out_3417269740718499968[223] = 0;
   out_3417269740718499968[224] = 0;
   out_3417269740718499968[225] = 0;
   out_3417269740718499968[226] = 0;
   out_3417269740718499968[227] = 0;
   out_3417269740718499968[228] = 0;
   out_3417269740718499968[229] = 0;
   out_3417269740718499968[230] = 0;
   out_3417269740718499968[231] = 0;
   out_3417269740718499968[232] = 0;
   out_3417269740718499968[233] = 0;
   out_3417269740718499968[234] = 0;
   out_3417269740718499968[235] = 0;
   out_3417269740718499968[236] = 0;
   out_3417269740718499968[237] = 0;
   out_3417269740718499968[238] = 0;
   out_3417269740718499968[239] = 0;
   out_3417269740718499968[240] = 0;
   out_3417269740718499968[241] = 0;
   out_3417269740718499968[242] = 1;
   out_3417269740718499968[243] = 0;
   out_3417269740718499968[244] = 0;
   out_3417269740718499968[245] = 0;
   out_3417269740718499968[246] = 0;
   out_3417269740718499968[247] = 0;
   out_3417269740718499968[248] = 0;
   out_3417269740718499968[249] = 0;
   out_3417269740718499968[250] = 0;
   out_3417269740718499968[251] = 0;
   out_3417269740718499968[252] = 0;
   out_3417269740718499968[253] = 0;
   out_3417269740718499968[254] = 0;
   out_3417269740718499968[255] = 0;
   out_3417269740718499968[256] = 0;
   out_3417269740718499968[257] = 0;
   out_3417269740718499968[258] = 0;
   out_3417269740718499968[259] = 0;
   out_3417269740718499968[260] = 0;
   out_3417269740718499968[261] = 0;
   out_3417269740718499968[262] = 0;
   out_3417269740718499968[263] = 0;
   out_3417269740718499968[264] = 1;
   out_3417269740718499968[265] = 0;
   out_3417269740718499968[266] = 0;
   out_3417269740718499968[267] = 0;
   out_3417269740718499968[268] = 0;
   out_3417269740718499968[269] = 0;
   out_3417269740718499968[270] = 0;
   out_3417269740718499968[271] = 0;
   out_3417269740718499968[272] = 0;
   out_3417269740718499968[273] = 0;
   out_3417269740718499968[274] = 0;
   out_3417269740718499968[275] = 0;
   out_3417269740718499968[276] = 0;
   out_3417269740718499968[277] = 0;
   out_3417269740718499968[278] = 0;
   out_3417269740718499968[279] = 0;
   out_3417269740718499968[280] = 0;
   out_3417269740718499968[281] = 0;
   out_3417269740718499968[282] = 0;
   out_3417269740718499968[283] = 0;
   out_3417269740718499968[284] = 0;
   out_3417269740718499968[285] = 0;
   out_3417269740718499968[286] = 1;
   out_3417269740718499968[287] = 0;
   out_3417269740718499968[288] = 0;
   out_3417269740718499968[289] = 0;
   out_3417269740718499968[290] = 0;
   out_3417269740718499968[291] = 0;
   out_3417269740718499968[292] = 0;
   out_3417269740718499968[293] = 0;
   out_3417269740718499968[294] = 0;
   out_3417269740718499968[295] = 0;
   out_3417269740718499968[296] = 0;
   out_3417269740718499968[297] = 0;
   out_3417269740718499968[298] = 0;
   out_3417269740718499968[299] = 0;
   out_3417269740718499968[300] = 0;
   out_3417269740718499968[301] = 0;
   out_3417269740718499968[302] = 0;
   out_3417269740718499968[303] = 0;
   out_3417269740718499968[304] = 0;
   out_3417269740718499968[305] = 0;
   out_3417269740718499968[306] = 0;
   out_3417269740718499968[307] = 0;
   out_3417269740718499968[308] = 1;
   out_3417269740718499968[309] = 0;
   out_3417269740718499968[310] = 0;
   out_3417269740718499968[311] = 0;
   out_3417269740718499968[312] = 0;
   out_3417269740718499968[313] = 0;
   out_3417269740718499968[314] = 0;
   out_3417269740718499968[315] = 0;
   out_3417269740718499968[316] = 0;
   out_3417269740718499968[317] = 0;
   out_3417269740718499968[318] = 0;
   out_3417269740718499968[319] = 0;
   out_3417269740718499968[320] = 0;
   out_3417269740718499968[321] = 0;
   out_3417269740718499968[322] = 0;
   out_3417269740718499968[323] = 0;
   out_3417269740718499968[324] = 0;
   out_3417269740718499968[325] = 0;
   out_3417269740718499968[326] = 0;
   out_3417269740718499968[327] = 0;
   out_3417269740718499968[328] = 0;
   out_3417269740718499968[329] = 0;
   out_3417269740718499968[330] = 1;
   out_3417269740718499968[331] = 0;
   out_3417269740718499968[332] = 0;
   out_3417269740718499968[333] = 0;
   out_3417269740718499968[334] = 0;
   out_3417269740718499968[335] = 0;
   out_3417269740718499968[336] = 0;
   out_3417269740718499968[337] = 0;
   out_3417269740718499968[338] = 0;
   out_3417269740718499968[339] = 0;
   out_3417269740718499968[340] = 0;
   out_3417269740718499968[341] = 0;
   out_3417269740718499968[342] = 0;
   out_3417269740718499968[343] = 0;
   out_3417269740718499968[344] = 0;
   out_3417269740718499968[345] = 0;
   out_3417269740718499968[346] = 0;
   out_3417269740718499968[347] = 0;
   out_3417269740718499968[348] = 0;
   out_3417269740718499968[349] = 0;
   out_3417269740718499968[350] = 0;
   out_3417269740718499968[351] = 0;
   out_3417269740718499968[352] = 1;
   out_3417269740718499968[353] = 0;
   out_3417269740718499968[354] = 0;
   out_3417269740718499968[355] = 0;
   out_3417269740718499968[356] = 0;
   out_3417269740718499968[357] = 0;
   out_3417269740718499968[358] = 0;
   out_3417269740718499968[359] = 0;
   out_3417269740718499968[360] = 0;
   out_3417269740718499968[361] = 0;
   out_3417269740718499968[362] = 0;
   out_3417269740718499968[363] = 0;
   out_3417269740718499968[364] = 0;
   out_3417269740718499968[365] = 0;
   out_3417269740718499968[366] = 0;
   out_3417269740718499968[367] = 0;
   out_3417269740718499968[368] = 0;
   out_3417269740718499968[369] = 0;
   out_3417269740718499968[370] = 0;
   out_3417269740718499968[371] = 0;
   out_3417269740718499968[372] = 0;
   out_3417269740718499968[373] = 0;
   out_3417269740718499968[374] = 1;
   out_3417269740718499968[375] = 0;
   out_3417269740718499968[376] = 0;
   out_3417269740718499968[377] = 0;
   out_3417269740718499968[378] = 0;
   out_3417269740718499968[379] = 0;
   out_3417269740718499968[380] = 0;
   out_3417269740718499968[381] = 0;
   out_3417269740718499968[382] = 0;
   out_3417269740718499968[383] = 0;
   out_3417269740718499968[384] = 0;
   out_3417269740718499968[385] = 0;
   out_3417269740718499968[386] = 0;
   out_3417269740718499968[387] = 0;
   out_3417269740718499968[388] = 0;
   out_3417269740718499968[389] = 0;
   out_3417269740718499968[390] = 0;
   out_3417269740718499968[391] = 0;
   out_3417269740718499968[392] = 0;
   out_3417269740718499968[393] = 0;
   out_3417269740718499968[394] = 0;
   out_3417269740718499968[395] = 0;
   out_3417269740718499968[396] = 1;
   out_3417269740718499968[397] = 0;
   out_3417269740718499968[398] = 0;
   out_3417269740718499968[399] = 0;
   out_3417269740718499968[400] = 0;
   out_3417269740718499968[401] = 0;
   out_3417269740718499968[402] = 0;
   out_3417269740718499968[403] = 0;
   out_3417269740718499968[404] = 0;
   out_3417269740718499968[405] = 0;
   out_3417269740718499968[406] = 0;
   out_3417269740718499968[407] = 0;
   out_3417269740718499968[408] = 0;
   out_3417269740718499968[409] = 0;
   out_3417269740718499968[410] = 0;
   out_3417269740718499968[411] = 0;
   out_3417269740718499968[412] = 0;
   out_3417269740718499968[413] = 0;
   out_3417269740718499968[414] = 0;
   out_3417269740718499968[415] = 0;
   out_3417269740718499968[416] = 0;
   out_3417269740718499968[417] = 0;
   out_3417269740718499968[418] = 1;
   out_3417269740718499968[419] = 0;
   out_3417269740718499968[420] = 0;
   out_3417269740718499968[421] = 0;
   out_3417269740718499968[422] = 0;
   out_3417269740718499968[423] = 0;
   out_3417269740718499968[424] = 0;
   out_3417269740718499968[425] = 0;
   out_3417269740718499968[426] = 0;
   out_3417269740718499968[427] = 0;
   out_3417269740718499968[428] = 0;
   out_3417269740718499968[429] = 0;
   out_3417269740718499968[430] = 0;
   out_3417269740718499968[431] = 0;
   out_3417269740718499968[432] = 0;
   out_3417269740718499968[433] = 0;
   out_3417269740718499968[434] = 0;
   out_3417269740718499968[435] = 0;
   out_3417269740718499968[436] = 0;
   out_3417269740718499968[437] = 0;
   out_3417269740718499968[438] = 0;
   out_3417269740718499968[439] = 0;
   out_3417269740718499968[440] = 1;
}
void h_4(double *state, double *unused, double *out_8184302504804048816) {
   out_8184302504804048816[0] = state[10] + state[13];
   out_8184302504804048816[1] = state[11] + state[14];
   out_8184302504804048816[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3295468362103921480) {
   out_3295468362103921480[0] = 0;
   out_3295468362103921480[1] = 0;
   out_3295468362103921480[2] = 0;
   out_3295468362103921480[3] = 0;
   out_3295468362103921480[4] = 0;
   out_3295468362103921480[5] = 0;
   out_3295468362103921480[6] = 0;
   out_3295468362103921480[7] = 0;
   out_3295468362103921480[8] = 0;
   out_3295468362103921480[9] = 0;
   out_3295468362103921480[10] = 1;
   out_3295468362103921480[11] = 0;
   out_3295468362103921480[12] = 0;
   out_3295468362103921480[13] = 1;
   out_3295468362103921480[14] = 0;
   out_3295468362103921480[15] = 0;
   out_3295468362103921480[16] = 0;
   out_3295468362103921480[17] = 0;
   out_3295468362103921480[18] = 0;
   out_3295468362103921480[19] = 0;
   out_3295468362103921480[20] = 0;
   out_3295468362103921480[21] = 0;
   out_3295468362103921480[22] = 0;
   out_3295468362103921480[23] = 0;
   out_3295468362103921480[24] = 0;
   out_3295468362103921480[25] = 0;
   out_3295468362103921480[26] = 0;
   out_3295468362103921480[27] = 0;
   out_3295468362103921480[28] = 0;
   out_3295468362103921480[29] = 0;
   out_3295468362103921480[30] = 0;
   out_3295468362103921480[31] = 0;
   out_3295468362103921480[32] = 0;
   out_3295468362103921480[33] = 1;
   out_3295468362103921480[34] = 0;
   out_3295468362103921480[35] = 0;
   out_3295468362103921480[36] = 1;
   out_3295468362103921480[37] = 0;
   out_3295468362103921480[38] = 0;
   out_3295468362103921480[39] = 0;
   out_3295468362103921480[40] = 0;
   out_3295468362103921480[41] = 0;
   out_3295468362103921480[42] = 0;
   out_3295468362103921480[43] = 0;
   out_3295468362103921480[44] = 0;
   out_3295468362103921480[45] = 0;
   out_3295468362103921480[46] = 0;
   out_3295468362103921480[47] = 0;
   out_3295468362103921480[48] = 0;
   out_3295468362103921480[49] = 0;
   out_3295468362103921480[50] = 0;
   out_3295468362103921480[51] = 0;
   out_3295468362103921480[52] = 0;
   out_3295468362103921480[53] = 0;
   out_3295468362103921480[54] = 0;
   out_3295468362103921480[55] = 0;
   out_3295468362103921480[56] = 1;
   out_3295468362103921480[57] = 0;
   out_3295468362103921480[58] = 0;
   out_3295468362103921480[59] = 1;
   out_3295468362103921480[60] = 0;
   out_3295468362103921480[61] = 0;
   out_3295468362103921480[62] = 0;
   out_3295468362103921480[63] = 0;
   out_3295468362103921480[64] = 0;
   out_3295468362103921480[65] = 0;
}
void h_9(double *state, double *unused, double *out_2584603246226752416) {
   out_2584603246226752416[0] = state[10];
   out_2584603246226752416[1] = state[11];
   out_2584603246226752416[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3054278715474330835) {
   out_3054278715474330835[0] = 0;
   out_3054278715474330835[1] = 0;
   out_3054278715474330835[2] = 0;
   out_3054278715474330835[3] = 0;
   out_3054278715474330835[4] = 0;
   out_3054278715474330835[5] = 0;
   out_3054278715474330835[6] = 0;
   out_3054278715474330835[7] = 0;
   out_3054278715474330835[8] = 0;
   out_3054278715474330835[9] = 0;
   out_3054278715474330835[10] = 1;
   out_3054278715474330835[11] = 0;
   out_3054278715474330835[12] = 0;
   out_3054278715474330835[13] = 0;
   out_3054278715474330835[14] = 0;
   out_3054278715474330835[15] = 0;
   out_3054278715474330835[16] = 0;
   out_3054278715474330835[17] = 0;
   out_3054278715474330835[18] = 0;
   out_3054278715474330835[19] = 0;
   out_3054278715474330835[20] = 0;
   out_3054278715474330835[21] = 0;
   out_3054278715474330835[22] = 0;
   out_3054278715474330835[23] = 0;
   out_3054278715474330835[24] = 0;
   out_3054278715474330835[25] = 0;
   out_3054278715474330835[26] = 0;
   out_3054278715474330835[27] = 0;
   out_3054278715474330835[28] = 0;
   out_3054278715474330835[29] = 0;
   out_3054278715474330835[30] = 0;
   out_3054278715474330835[31] = 0;
   out_3054278715474330835[32] = 0;
   out_3054278715474330835[33] = 1;
   out_3054278715474330835[34] = 0;
   out_3054278715474330835[35] = 0;
   out_3054278715474330835[36] = 0;
   out_3054278715474330835[37] = 0;
   out_3054278715474330835[38] = 0;
   out_3054278715474330835[39] = 0;
   out_3054278715474330835[40] = 0;
   out_3054278715474330835[41] = 0;
   out_3054278715474330835[42] = 0;
   out_3054278715474330835[43] = 0;
   out_3054278715474330835[44] = 0;
   out_3054278715474330835[45] = 0;
   out_3054278715474330835[46] = 0;
   out_3054278715474330835[47] = 0;
   out_3054278715474330835[48] = 0;
   out_3054278715474330835[49] = 0;
   out_3054278715474330835[50] = 0;
   out_3054278715474330835[51] = 0;
   out_3054278715474330835[52] = 0;
   out_3054278715474330835[53] = 0;
   out_3054278715474330835[54] = 0;
   out_3054278715474330835[55] = 0;
   out_3054278715474330835[56] = 1;
   out_3054278715474330835[57] = 0;
   out_3054278715474330835[58] = 0;
   out_3054278715474330835[59] = 0;
   out_3054278715474330835[60] = 0;
   out_3054278715474330835[61] = 0;
   out_3054278715474330835[62] = 0;
   out_3054278715474330835[63] = 0;
   out_3054278715474330835[64] = 0;
   out_3054278715474330835[65] = 0;
}
void h_10(double *state, double *unused, double *out_2090935561331339912) {
   out_2090935561331339912[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2090935561331339912[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2090935561331339912[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3820411795354228066) {
   out_3820411795354228066[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3820411795354228066[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3820411795354228066[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3820411795354228066[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3820411795354228066[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3820411795354228066[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3820411795354228066[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3820411795354228066[7] = 0;
   out_3820411795354228066[8] = 0;
   out_3820411795354228066[9] = 0;
   out_3820411795354228066[10] = 0;
   out_3820411795354228066[11] = 0;
   out_3820411795354228066[12] = 0;
   out_3820411795354228066[13] = 0;
   out_3820411795354228066[14] = 0;
   out_3820411795354228066[15] = 0;
   out_3820411795354228066[16] = 1;
   out_3820411795354228066[17] = 0;
   out_3820411795354228066[18] = 0;
   out_3820411795354228066[19] = 1;
   out_3820411795354228066[20] = 0;
   out_3820411795354228066[21] = 0;
   out_3820411795354228066[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3820411795354228066[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3820411795354228066[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3820411795354228066[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3820411795354228066[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3820411795354228066[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3820411795354228066[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3820411795354228066[29] = 0;
   out_3820411795354228066[30] = 0;
   out_3820411795354228066[31] = 0;
   out_3820411795354228066[32] = 0;
   out_3820411795354228066[33] = 0;
   out_3820411795354228066[34] = 0;
   out_3820411795354228066[35] = 0;
   out_3820411795354228066[36] = 0;
   out_3820411795354228066[37] = 0;
   out_3820411795354228066[38] = 0;
   out_3820411795354228066[39] = 1;
   out_3820411795354228066[40] = 0;
   out_3820411795354228066[41] = 0;
   out_3820411795354228066[42] = 1;
   out_3820411795354228066[43] = 0;
   out_3820411795354228066[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3820411795354228066[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3820411795354228066[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3820411795354228066[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3820411795354228066[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3820411795354228066[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3820411795354228066[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3820411795354228066[51] = 0;
   out_3820411795354228066[52] = 0;
   out_3820411795354228066[53] = 0;
   out_3820411795354228066[54] = 0;
   out_3820411795354228066[55] = 0;
   out_3820411795354228066[56] = 0;
   out_3820411795354228066[57] = 0;
   out_3820411795354228066[58] = 0;
   out_3820411795354228066[59] = 0;
   out_3820411795354228066[60] = 0;
   out_3820411795354228066[61] = 0;
   out_3820411795354228066[62] = 1;
   out_3820411795354228066[63] = 0;
   out_3820411795354228066[64] = 0;
   out_3820411795354228066[65] = 1;
}
void h_12(double *state, double *unused, double *out_5732995365552519949) {
   out_5732995365552519949[0] = state[0];
   out_5732995365552519949[1] = state[1];
   out_5732995365552519949[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1723988045928040315) {
   out_1723988045928040315[0] = 1;
   out_1723988045928040315[1] = 0;
   out_1723988045928040315[2] = 0;
   out_1723988045928040315[3] = 0;
   out_1723988045928040315[4] = 0;
   out_1723988045928040315[5] = 0;
   out_1723988045928040315[6] = 0;
   out_1723988045928040315[7] = 0;
   out_1723988045928040315[8] = 0;
   out_1723988045928040315[9] = 0;
   out_1723988045928040315[10] = 0;
   out_1723988045928040315[11] = 0;
   out_1723988045928040315[12] = 0;
   out_1723988045928040315[13] = 0;
   out_1723988045928040315[14] = 0;
   out_1723988045928040315[15] = 0;
   out_1723988045928040315[16] = 0;
   out_1723988045928040315[17] = 0;
   out_1723988045928040315[18] = 0;
   out_1723988045928040315[19] = 0;
   out_1723988045928040315[20] = 0;
   out_1723988045928040315[21] = 0;
   out_1723988045928040315[22] = 0;
   out_1723988045928040315[23] = 1;
   out_1723988045928040315[24] = 0;
   out_1723988045928040315[25] = 0;
   out_1723988045928040315[26] = 0;
   out_1723988045928040315[27] = 0;
   out_1723988045928040315[28] = 0;
   out_1723988045928040315[29] = 0;
   out_1723988045928040315[30] = 0;
   out_1723988045928040315[31] = 0;
   out_1723988045928040315[32] = 0;
   out_1723988045928040315[33] = 0;
   out_1723988045928040315[34] = 0;
   out_1723988045928040315[35] = 0;
   out_1723988045928040315[36] = 0;
   out_1723988045928040315[37] = 0;
   out_1723988045928040315[38] = 0;
   out_1723988045928040315[39] = 0;
   out_1723988045928040315[40] = 0;
   out_1723988045928040315[41] = 0;
   out_1723988045928040315[42] = 0;
   out_1723988045928040315[43] = 0;
   out_1723988045928040315[44] = 0;
   out_1723988045928040315[45] = 0;
   out_1723988045928040315[46] = 1;
   out_1723988045928040315[47] = 0;
   out_1723988045928040315[48] = 0;
   out_1723988045928040315[49] = 0;
   out_1723988045928040315[50] = 0;
   out_1723988045928040315[51] = 0;
   out_1723988045928040315[52] = 0;
   out_1723988045928040315[53] = 0;
   out_1723988045928040315[54] = 0;
   out_1723988045928040315[55] = 0;
   out_1723988045928040315[56] = 0;
   out_1723988045928040315[57] = 0;
   out_1723988045928040315[58] = 0;
   out_1723988045928040315[59] = 0;
   out_1723988045928040315[60] = 0;
   out_1723988045928040315[61] = 0;
   out_1723988045928040315[62] = 0;
   out_1723988045928040315[63] = 0;
   out_1723988045928040315[64] = 0;
   out_1723988045928040315[65] = 0;
}
void h_31(double *state, double *unused, double *out_1142810727031743824) {
   out_1142810727031743824[0] = state[7];
   out_1142810727031743824[1] = state[8];
   out_1142810727031743824[2] = state[9];
}
void H_31(double *state, double *unused, double *out_4469551078253054024) {
   out_4469551078253054024[0] = 0;
   out_4469551078253054024[1] = 0;
   out_4469551078253054024[2] = 0;
   out_4469551078253054024[3] = 0;
   out_4469551078253054024[4] = 0;
   out_4469551078253054024[5] = 0;
   out_4469551078253054024[6] = 0;
   out_4469551078253054024[7] = 1;
   out_4469551078253054024[8] = 0;
   out_4469551078253054024[9] = 0;
   out_4469551078253054024[10] = 0;
   out_4469551078253054024[11] = 0;
   out_4469551078253054024[12] = 0;
   out_4469551078253054024[13] = 0;
   out_4469551078253054024[14] = 0;
   out_4469551078253054024[15] = 0;
   out_4469551078253054024[16] = 0;
   out_4469551078253054024[17] = 0;
   out_4469551078253054024[18] = 0;
   out_4469551078253054024[19] = 0;
   out_4469551078253054024[20] = 0;
   out_4469551078253054024[21] = 0;
   out_4469551078253054024[22] = 0;
   out_4469551078253054024[23] = 0;
   out_4469551078253054024[24] = 0;
   out_4469551078253054024[25] = 0;
   out_4469551078253054024[26] = 0;
   out_4469551078253054024[27] = 0;
   out_4469551078253054024[28] = 0;
   out_4469551078253054024[29] = 0;
   out_4469551078253054024[30] = 1;
   out_4469551078253054024[31] = 0;
   out_4469551078253054024[32] = 0;
   out_4469551078253054024[33] = 0;
   out_4469551078253054024[34] = 0;
   out_4469551078253054024[35] = 0;
   out_4469551078253054024[36] = 0;
   out_4469551078253054024[37] = 0;
   out_4469551078253054024[38] = 0;
   out_4469551078253054024[39] = 0;
   out_4469551078253054024[40] = 0;
   out_4469551078253054024[41] = 0;
   out_4469551078253054024[42] = 0;
   out_4469551078253054024[43] = 0;
   out_4469551078253054024[44] = 0;
   out_4469551078253054024[45] = 0;
   out_4469551078253054024[46] = 0;
   out_4469551078253054024[47] = 0;
   out_4469551078253054024[48] = 0;
   out_4469551078253054024[49] = 0;
   out_4469551078253054024[50] = 0;
   out_4469551078253054024[51] = 0;
   out_4469551078253054024[52] = 0;
   out_4469551078253054024[53] = 1;
   out_4469551078253054024[54] = 0;
   out_4469551078253054024[55] = 0;
   out_4469551078253054024[56] = 0;
   out_4469551078253054024[57] = 0;
   out_4469551078253054024[58] = 0;
   out_4469551078253054024[59] = 0;
   out_4469551078253054024[60] = 0;
   out_4469551078253054024[61] = 0;
   out_4469551078253054024[62] = 0;
   out_4469551078253054024[63] = 0;
   out_4469551078253054024[64] = 0;
   out_4469551078253054024[65] = 0;
}
void h_32(double *state, double *unused, double *out_8646692373654724500) {
   out_8646692373654724500[0] = state[3];
   out_8646692373654724500[1] = state[4];
   out_8646692373654724500[2] = state[5];
   out_8646692373654724500[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1583069655404599528) {
   out_1583069655404599528[0] = 0;
   out_1583069655404599528[1] = 0;
   out_1583069655404599528[2] = 0;
   out_1583069655404599528[3] = 1;
   out_1583069655404599528[4] = 0;
   out_1583069655404599528[5] = 0;
   out_1583069655404599528[6] = 0;
   out_1583069655404599528[7] = 0;
   out_1583069655404599528[8] = 0;
   out_1583069655404599528[9] = 0;
   out_1583069655404599528[10] = 0;
   out_1583069655404599528[11] = 0;
   out_1583069655404599528[12] = 0;
   out_1583069655404599528[13] = 0;
   out_1583069655404599528[14] = 0;
   out_1583069655404599528[15] = 0;
   out_1583069655404599528[16] = 0;
   out_1583069655404599528[17] = 0;
   out_1583069655404599528[18] = 0;
   out_1583069655404599528[19] = 0;
   out_1583069655404599528[20] = 0;
   out_1583069655404599528[21] = 0;
   out_1583069655404599528[22] = 0;
   out_1583069655404599528[23] = 0;
   out_1583069655404599528[24] = 0;
   out_1583069655404599528[25] = 0;
   out_1583069655404599528[26] = 1;
   out_1583069655404599528[27] = 0;
   out_1583069655404599528[28] = 0;
   out_1583069655404599528[29] = 0;
   out_1583069655404599528[30] = 0;
   out_1583069655404599528[31] = 0;
   out_1583069655404599528[32] = 0;
   out_1583069655404599528[33] = 0;
   out_1583069655404599528[34] = 0;
   out_1583069655404599528[35] = 0;
   out_1583069655404599528[36] = 0;
   out_1583069655404599528[37] = 0;
   out_1583069655404599528[38] = 0;
   out_1583069655404599528[39] = 0;
   out_1583069655404599528[40] = 0;
   out_1583069655404599528[41] = 0;
   out_1583069655404599528[42] = 0;
   out_1583069655404599528[43] = 0;
   out_1583069655404599528[44] = 0;
   out_1583069655404599528[45] = 0;
   out_1583069655404599528[46] = 0;
   out_1583069655404599528[47] = 0;
   out_1583069655404599528[48] = 0;
   out_1583069655404599528[49] = 1;
   out_1583069655404599528[50] = 0;
   out_1583069655404599528[51] = 0;
   out_1583069655404599528[52] = 0;
   out_1583069655404599528[53] = 0;
   out_1583069655404599528[54] = 0;
   out_1583069655404599528[55] = 0;
   out_1583069655404599528[56] = 0;
   out_1583069655404599528[57] = 0;
   out_1583069655404599528[58] = 0;
   out_1583069655404599528[59] = 0;
   out_1583069655404599528[60] = 0;
   out_1583069655404599528[61] = 0;
   out_1583069655404599528[62] = 0;
   out_1583069655404599528[63] = 0;
   out_1583069655404599528[64] = 0;
   out_1583069655404599528[65] = 0;
   out_1583069655404599528[66] = 0;
   out_1583069655404599528[67] = 0;
   out_1583069655404599528[68] = 0;
   out_1583069655404599528[69] = 0;
   out_1583069655404599528[70] = 0;
   out_1583069655404599528[71] = 0;
   out_1583069655404599528[72] = 1;
   out_1583069655404599528[73] = 0;
   out_1583069655404599528[74] = 0;
   out_1583069655404599528[75] = 0;
   out_1583069655404599528[76] = 0;
   out_1583069655404599528[77] = 0;
   out_1583069655404599528[78] = 0;
   out_1583069655404599528[79] = 0;
   out_1583069655404599528[80] = 0;
   out_1583069655404599528[81] = 0;
   out_1583069655404599528[82] = 0;
   out_1583069655404599528[83] = 0;
   out_1583069655404599528[84] = 0;
   out_1583069655404599528[85] = 0;
   out_1583069655404599528[86] = 0;
   out_1583069655404599528[87] = 0;
}
void h_13(double *state, double *unused, double *out_4669449068525000525) {
   out_4669449068525000525[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4669449068525000525[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4669449068525000525[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4867347292809621062) {
   out_4867347292809621062[0] = 0;
   out_4867347292809621062[1] = 0;
   out_4867347292809621062[2] = 0;
   out_4867347292809621062[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4867347292809621062[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4867347292809621062[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4867347292809621062[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4867347292809621062[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4867347292809621062[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4867347292809621062[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4867347292809621062[10] = 0;
   out_4867347292809621062[11] = 0;
   out_4867347292809621062[12] = 0;
   out_4867347292809621062[13] = 0;
   out_4867347292809621062[14] = 0;
   out_4867347292809621062[15] = 0;
   out_4867347292809621062[16] = 0;
   out_4867347292809621062[17] = 0;
   out_4867347292809621062[18] = 0;
   out_4867347292809621062[19] = 0;
   out_4867347292809621062[20] = 0;
   out_4867347292809621062[21] = 0;
   out_4867347292809621062[22] = 0;
   out_4867347292809621062[23] = 0;
   out_4867347292809621062[24] = 0;
   out_4867347292809621062[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4867347292809621062[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4867347292809621062[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4867347292809621062[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4867347292809621062[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4867347292809621062[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4867347292809621062[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4867347292809621062[32] = 0;
   out_4867347292809621062[33] = 0;
   out_4867347292809621062[34] = 0;
   out_4867347292809621062[35] = 0;
   out_4867347292809621062[36] = 0;
   out_4867347292809621062[37] = 0;
   out_4867347292809621062[38] = 0;
   out_4867347292809621062[39] = 0;
   out_4867347292809621062[40] = 0;
   out_4867347292809621062[41] = 0;
   out_4867347292809621062[42] = 0;
   out_4867347292809621062[43] = 0;
   out_4867347292809621062[44] = 0;
   out_4867347292809621062[45] = 0;
   out_4867347292809621062[46] = 0;
   out_4867347292809621062[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4867347292809621062[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4867347292809621062[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4867347292809621062[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4867347292809621062[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4867347292809621062[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4867347292809621062[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4867347292809621062[54] = 0;
   out_4867347292809621062[55] = 0;
   out_4867347292809621062[56] = 0;
   out_4867347292809621062[57] = 0;
   out_4867347292809621062[58] = 0;
   out_4867347292809621062[59] = 0;
   out_4867347292809621062[60] = 0;
   out_4867347292809621062[61] = 0;
   out_4867347292809621062[62] = 0;
   out_4867347292809621062[63] = 0;
   out_4867347292809621062[64] = 0;
   out_4867347292809621062[65] = 0;
}
void h_14(double *state, double *unused, double *out_2584603246226752416) {
   out_2584603246226752416[0] = state[10];
   out_2584603246226752416[1] = state[11];
   out_2584603246226752416[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3054278715474330835) {
   out_3054278715474330835[0] = 0;
   out_3054278715474330835[1] = 0;
   out_3054278715474330835[2] = 0;
   out_3054278715474330835[3] = 0;
   out_3054278715474330835[4] = 0;
   out_3054278715474330835[5] = 0;
   out_3054278715474330835[6] = 0;
   out_3054278715474330835[7] = 0;
   out_3054278715474330835[8] = 0;
   out_3054278715474330835[9] = 0;
   out_3054278715474330835[10] = 1;
   out_3054278715474330835[11] = 0;
   out_3054278715474330835[12] = 0;
   out_3054278715474330835[13] = 0;
   out_3054278715474330835[14] = 0;
   out_3054278715474330835[15] = 0;
   out_3054278715474330835[16] = 0;
   out_3054278715474330835[17] = 0;
   out_3054278715474330835[18] = 0;
   out_3054278715474330835[19] = 0;
   out_3054278715474330835[20] = 0;
   out_3054278715474330835[21] = 0;
   out_3054278715474330835[22] = 0;
   out_3054278715474330835[23] = 0;
   out_3054278715474330835[24] = 0;
   out_3054278715474330835[25] = 0;
   out_3054278715474330835[26] = 0;
   out_3054278715474330835[27] = 0;
   out_3054278715474330835[28] = 0;
   out_3054278715474330835[29] = 0;
   out_3054278715474330835[30] = 0;
   out_3054278715474330835[31] = 0;
   out_3054278715474330835[32] = 0;
   out_3054278715474330835[33] = 1;
   out_3054278715474330835[34] = 0;
   out_3054278715474330835[35] = 0;
   out_3054278715474330835[36] = 0;
   out_3054278715474330835[37] = 0;
   out_3054278715474330835[38] = 0;
   out_3054278715474330835[39] = 0;
   out_3054278715474330835[40] = 0;
   out_3054278715474330835[41] = 0;
   out_3054278715474330835[42] = 0;
   out_3054278715474330835[43] = 0;
   out_3054278715474330835[44] = 0;
   out_3054278715474330835[45] = 0;
   out_3054278715474330835[46] = 0;
   out_3054278715474330835[47] = 0;
   out_3054278715474330835[48] = 0;
   out_3054278715474330835[49] = 0;
   out_3054278715474330835[50] = 0;
   out_3054278715474330835[51] = 0;
   out_3054278715474330835[52] = 0;
   out_3054278715474330835[53] = 0;
   out_3054278715474330835[54] = 0;
   out_3054278715474330835[55] = 0;
   out_3054278715474330835[56] = 1;
   out_3054278715474330835[57] = 0;
   out_3054278715474330835[58] = 0;
   out_3054278715474330835[59] = 0;
   out_3054278715474330835[60] = 0;
   out_3054278715474330835[61] = 0;
   out_3054278715474330835[62] = 0;
   out_3054278715474330835[63] = 0;
   out_3054278715474330835[64] = 0;
   out_3054278715474330835[65] = 0;
}
void h_33(double *state, double *unused, double *out_6688590622439407421) {
   out_6688590622439407421[0] = state[16];
   out_6688590622439407421[1] = state[17];
   out_6688590622439407421[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7620108082891911628) {
   out_7620108082891911628[0] = 0;
   out_7620108082891911628[1] = 0;
   out_7620108082891911628[2] = 0;
   out_7620108082891911628[3] = 0;
   out_7620108082891911628[4] = 0;
   out_7620108082891911628[5] = 0;
   out_7620108082891911628[6] = 0;
   out_7620108082891911628[7] = 0;
   out_7620108082891911628[8] = 0;
   out_7620108082891911628[9] = 0;
   out_7620108082891911628[10] = 0;
   out_7620108082891911628[11] = 0;
   out_7620108082891911628[12] = 0;
   out_7620108082891911628[13] = 0;
   out_7620108082891911628[14] = 0;
   out_7620108082891911628[15] = 0;
   out_7620108082891911628[16] = 1;
   out_7620108082891911628[17] = 0;
   out_7620108082891911628[18] = 0;
   out_7620108082891911628[19] = 0;
   out_7620108082891911628[20] = 0;
   out_7620108082891911628[21] = 0;
   out_7620108082891911628[22] = 0;
   out_7620108082891911628[23] = 0;
   out_7620108082891911628[24] = 0;
   out_7620108082891911628[25] = 0;
   out_7620108082891911628[26] = 0;
   out_7620108082891911628[27] = 0;
   out_7620108082891911628[28] = 0;
   out_7620108082891911628[29] = 0;
   out_7620108082891911628[30] = 0;
   out_7620108082891911628[31] = 0;
   out_7620108082891911628[32] = 0;
   out_7620108082891911628[33] = 0;
   out_7620108082891911628[34] = 0;
   out_7620108082891911628[35] = 0;
   out_7620108082891911628[36] = 0;
   out_7620108082891911628[37] = 0;
   out_7620108082891911628[38] = 0;
   out_7620108082891911628[39] = 1;
   out_7620108082891911628[40] = 0;
   out_7620108082891911628[41] = 0;
   out_7620108082891911628[42] = 0;
   out_7620108082891911628[43] = 0;
   out_7620108082891911628[44] = 0;
   out_7620108082891911628[45] = 0;
   out_7620108082891911628[46] = 0;
   out_7620108082891911628[47] = 0;
   out_7620108082891911628[48] = 0;
   out_7620108082891911628[49] = 0;
   out_7620108082891911628[50] = 0;
   out_7620108082891911628[51] = 0;
   out_7620108082891911628[52] = 0;
   out_7620108082891911628[53] = 0;
   out_7620108082891911628[54] = 0;
   out_7620108082891911628[55] = 0;
   out_7620108082891911628[56] = 0;
   out_7620108082891911628[57] = 0;
   out_7620108082891911628[58] = 0;
   out_7620108082891911628[59] = 0;
   out_7620108082891911628[60] = 0;
   out_7620108082891911628[61] = 0;
   out_7620108082891911628[62] = 1;
   out_7620108082891911628[63] = 0;
   out_7620108082891911628[64] = 0;
   out_7620108082891911628[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3162074725094743607) {
  H(in_vec, out_3162074725094743607);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5754035859235434590) {
  err_fun(nom_x, delta_x, out_5754035859235434590);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5787811691745881220) {
  inv_err_fun(nom_x, true_x, out_5787811691745881220);
}
void live_H_mod_fun(double *state, double *out_7077244422403030034) {
  H_mod_fun(state, out_7077244422403030034);
}
void live_f_fun(double *state, double dt, double *out_8051536556320895415) {
  f_fun(state,  dt, out_8051536556320895415);
}
void live_F_fun(double *state, double dt, double *out_3417269740718499968) {
  F_fun(state,  dt, out_3417269740718499968);
}
void live_h_4(double *state, double *unused, double *out_8184302504804048816) {
  h_4(state, unused, out_8184302504804048816);
}
void live_H_4(double *state, double *unused, double *out_3295468362103921480) {
  H_4(state, unused, out_3295468362103921480);
}
void live_h_9(double *state, double *unused, double *out_2584603246226752416) {
  h_9(state, unused, out_2584603246226752416);
}
void live_H_9(double *state, double *unused, double *out_3054278715474330835) {
  H_9(state, unused, out_3054278715474330835);
}
void live_h_10(double *state, double *unused, double *out_2090935561331339912) {
  h_10(state, unused, out_2090935561331339912);
}
void live_H_10(double *state, double *unused, double *out_3820411795354228066) {
  H_10(state, unused, out_3820411795354228066);
}
void live_h_12(double *state, double *unused, double *out_5732995365552519949) {
  h_12(state, unused, out_5732995365552519949);
}
void live_H_12(double *state, double *unused, double *out_1723988045928040315) {
  H_12(state, unused, out_1723988045928040315);
}
void live_h_31(double *state, double *unused, double *out_1142810727031743824) {
  h_31(state, unused, out_1142810727031743824);
}
void live_H_31(double *state, double *unused, double *out_4469551078253054024) {
  H_31(state, unused, out_4469551078253054024);
}
void live_h_32(double *state, double *unused, double *out_8646692373654724500) {
  h_32(state, unused, out_8646692373654724500);
}
void live_H_32(double *state, double *unused, double *out_1583069655404599528) {
  H_32(state, unused, out_1583069655404599528);
}
void live_h_13(double *state, double *unused, double *out_4669449068525000525) {
  h_13(state, unused, out_4669449068525000525);
}
void live_H_13(double *state, double *unused, double *out_4867347292809621062) {
  H_13(state, unused, out_4867347292809621062);
}
void live_h_14(double *state, double *unused, double *out_2584603246226752416) {
  h_14(state, unused, out_2584603246226752416);
}
void live_H_14(double *state, double *unused, double *out_3054278715474330835) {
  H_14(state, unused, out_3054278715474330835);
}
void live_h_33(double *state, double *unused, double *out_6688590622439407421) {
  h_33(state, unused, out_6688590622439407421);
}
void live_H_33(double *state, double *unused, double *out_7620108082891911628) {
  H_33(state, unused, out_7620108082891911628);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
